# This file is a template, and might need editing before it works on your project.
docker-build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    #- echo "$CI_REGISTRY_USER $CI_REGISTRY_PASSWORD"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    # --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    #"$CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
  tags:
    - main

    
deploy:
  stage: deploy
  image: gitlab/dind:latest
#  only:
#    - "master"
  environment: production
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - printf "DATABASE_URL=${DATABASE_URL}\nPORT=80\n" > environment.env
    - scp -r ./environment.env ./docker-compose.autodeploy.yml root@${DEPLOYMENT_SERVER_IP}:~/
    - ssh root@$DEPLOYMENT_SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}; docker-compose -f docker-compose.yml stop; docker-compose -f docker-compose.yml rm web --force; docker pull ${CI_REGISTRY_IMAGE}:latest; docker-compose -f docker-compose.yml up -d"
  tags:
    - main